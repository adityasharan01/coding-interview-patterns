Guess the Root
Given a non-negative integer n, find a number r such that r * r = n and round down to the nearest integer.

Can you implement this without using the built-in square root?

Constraints

0 â‰¤ n < 2 ** 31
Example 1
Input
n = 9
Output
3
Explanation
3 is the square root of 9.

Example 2
Input
n = 26
Output
5
Explanation
~5.09901951359 is the square root of 26 and rounding down gives us 5.


import java.util.*;

class Solution {
    public int solve(int n) {
        
        if (n < 2) {
            return n;
        }
        long result = 0;
        int start = 1;
        int end = n/2;
 
        while (start <= end)
        {
            int mid = (start + end) / 2;
            long sqr = mid*mid;
            if (sqr == n) 
            {
                return mid;
            }
            else if (sqr < n)
            {
                start = mid + 1;
                result = mid;
            }
            else
            {
                end = mid - 1;
            }
        }
        return result;
    }
 
}
